{"version":3,"sources":["components/dBody.js","components/dTable.js","components/Search.js","components/NavBar.js","utils/api.js","components/dArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DBody","users","undefined","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","large","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","dTable","headings","handleSort","id","width","style","onClick","toLowerCase","Search","handleSearchChange","type","placeholder","aria-label","onChange","e","NavBar","axios","get","DArea","state","order","filteredUsers","padding","heading","setState","sortedUsers","sort","a","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Component","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8af861f0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/dBody.css\";\n\nfunction DBody({ users }) {\n    function formatDate(date) {\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate = [month, day, year].join(\"-\");\n        return formattedDate\n    }\n\n    return (\n        <tbody>\n            {users[0] !== undefined && users[0].name !== undefined ? (\n                users.map(({ login, name, picture, phone, email, dob }) => {\n                    return (\n                        <tr key={login.uuid}>\n                            <td data-th=\"Image\" className=\"align-middle\">\n                                <img\n                                    src={picture.large}\n                                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                                    className=\"img-responsive\"\n                                />\n                            </td>\n                            <td data-th=\"Name\" className=\"name-cell align-middle\">\n                                {name.first} {name.last}\n                            </td>\n                            <td data-th=\"Phone\" className=\"align-middle\">\n                                {phone}\n                            </td>\n                            <td data-th=\"Email\" className=\"align-middle\">\n                                <a href={\"mailto:\" + email} target=\"__blank\">\n                                    {email}\n                                </a>\n                            </td>\n                            <td data-th=\"DOB\" className=\"align-middle\">\n                                {formatDate(dob.date)}\n                            </td>\n                        </tr>\n                    );\n                })\n            ) : (\n                    <></>\n                )}\n        </tbody>\n    );\n}\n\nexport default DBody;","import React from \"react\";\nimport DBody from \"./dBody\";\n// import \"../styles/dTable.css\";\n\nfunction dTable({ headings, users, handleSort }) {\n    return (\n        <div className=\"datatable mt-5\">\n            <table\n                id=\"table\"\n                className=\"table table-striped table-hover table-condensed\"\n            >\n                <thead>\n                    <tr>\n                        {headings.map(({ name, width }) => {\n                            return (\n                                <th\n                                    className=\"col\"\n                                    key={name}\n                                    style={{ width }}\n                                    onClick={() => {\n                                        handleSort(name.toLowerCase());\n                                    }}\n                                >\n                                    {name}\n                                    <span className=\"pointer\"></span>\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <DBody users={users} />\n            </table>\n        </div>\n    );\n}\n\nexport default dTable;","import React from \"react\";\nimport \"../styles/Search.css\";\n\nfunction Search({ handleSearchChange }) {\n    return (\n\n        <div className=\"searchbox ml-3 mt-2\">\n            <form className=\"form-inline-lg\">\n                <input\n                    className=\"form-control form-control-lg\"\n                    type=\"search-lg\"\n                    placeholder=\"Type name or last name\"\n                    aria-label=\"Search\"\n                    onChange={e => handleSearchChange(e)}\n                />\n            </form>\n            \n        </div>\n    );\n}\nexport default Search;","import React from \"react\";\nimport Search from \"./Search.js\";\n// import \"../styles/Nav.css\";\n\nfunction NavBar({ handleSearchChange }) {\n    return (\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\n            <div className=\"navbar-collapse row\" id=\"navbarNav\">\n                <Search handleSearchChange={handleSearchChange} />\n            </div>\n        </nav>\n    );\n}\nexport default NavBar;","import axios from \"axios\";\nexport default {\n    getUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=10&nuat=us\");\n    }\n};","import React, { Component } from \"react\";\nimport DTable from \"./dTable\";\nimport Nav from \"./NavBar\";\nimport API from \"../utils/api\";\nimport \"../styles/dArea.css\";\n\nexport default class DArea extends Component {\n    state = {\n        users: [{}],\n        order: \"descend\",\n        filteredUsers: [{}]\n    }\n\n    headings = [\n        { name: \"Photo\", width: \"10%\", padding: \"px\" },\n        { name: \"Name\", width: \"10%\" },\n        { name: \"Phone\", width: \"15%\" },\n        { name: \"Email\", width: \"15%\" },\n        { name: \"Date of Birth\", width: \"10%\" }\n    ]\n\n    handleSort = heading => {\n        if (this.state.order === \"descend\") {\n            this.setState({\n                order: \"ascend\"\n            })\n        } else {\n            this.setState({\n                order: \"descend\"\n            })\n        }\n\n        const compareFnc = (a, b) => {\n            if (this.state.order === \"ascend\") {\n                // account for missing values\n                if (a[heading] === undefined) {\n                    return 1;\n                } else if (b[heading] === undefined) {\n                    return -1;\n                }\n                // numerically\n                else if (heading === \"name\") {\n                    return a[heading].first.localeCompare(b[heading].first);\n                } else {\n                    return a[heading] - b[heading];\n                }\n            } else {\n                // account for missing values\n                if (a[heading] === undefined) {\n                    return 1;\n                } else if (b[heading] === undefined) {\n                    return -1;\n                }\n                // numerically\n                else if (heading === \"name\") {\n                    return b[heading].first.localeCompare(a[heading].first);\n                } else {\n                    return b[heading] - a[heading];\n                }\n            }\n\n        }\n        const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n        this.setState({ filteredUsers: sortedUsers });\n    }\n\n    handleSearchChange = event => {\n        console.log(event.target.value);\n        const filter = event.target.value;\n        const filteredList = this.state.users.filter(item => {\n            // merge data together, then see if user input is anywhere inside\n            let values = Object.values(item)\n                .join(\"\")\n                .toLowerCase();\n            return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n        this.setState({ filteredUsers: filteredList });\n    }\n\n    componentDidMount() {\n        API.getUsers().then(results => {\n            this.setState({\n                users: results.data.results,\n                filteredUsers: results.data.results\n            });\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Nav handleSearchChange={this.handleSearchChange} />\n                <div className=\"data-area\">\n                    <DTable\n                        headings={this.headings}\n                        users={this.state.filteredUsers}\n                        handleSort={this.handleSort}\n                    />\n                </div>\n            </>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport DArea from \"./dArea\";\n// import \"../styles/Main.css\";\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <>\n                <DArea />\n            </>\n        );\n    }\n}","import React from 'react';\nimport \"../styles/Wrapper.css\";\n\nfunction Wrapper({ children }) {\n    return (\n        <div className=\"wrapper\">\n            {children}\n        </div>\n    );\n}\n\nexport default Wrapper;","import React, { Component } from 'react';\nimport \"../styles/Header.css\";\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"text-info\"><h1>Employee Directory</h1></div>\n                <br></br>\n                <h2>Search Employees by Name, Email or Phone Number</h2>\n                <br></br>\n                <h3> Click on \"Name\" to sort employee</h3>\n\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}